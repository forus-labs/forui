// // GENERATED CODE - DO NOT MODIFY BY HAND
//
// **************************************************************************
// forui
// **************************************************************************
//
// ignore_for_file: type=lint
// ignore_for_file: deprecated_member_use

/// All themes in Forui. Generated by tool/cli_generator.
enum Theme {
  zinc(
    'zinc',
    'FThemeData get zincLight {\n  const colors = FColors(\n    brightness: Brightness.light,\n    barrier: Color(0x33000000),\n    background: Color(0xFFFFFFFF),\n    foreground: Color(0xFF09090B),\n    primary: Color(0xFF18181B),\n    primaryForeground: Color(0xFFFAFAFA),\n    secondary: Color(0xFFF4F4F5),\n    secondaryForeground: Color(0xFF18181B),\n    muted: Color(0xFFF4F4F5),\n    mutedForeground: Color(0xFF71717A),\n    destructive: Color(0xFFEF4444),\n    destructiveForeground: Color(0xFFFAFAFA),\n    error: Color(0xFFEF4444),\n    errorForeground: Color(0xFFFAFAFA),\n    border: Color(0xFFE4E4E7),\n  );\n\n  final typography = _typography(colors: colors);\n  final style = _style(colors: colors, typography: typography);\n\n  return FThemeData(colors: colors, typography: typography, style: style);\n}\n\nFThemeData get zincDark {\n  const colors = FColors(\n    brightness: Brightness.dark,\n    barrier: Color(0x7A000000),\n    background: Color(0xFF09090B),\n    foreground: Color(0xFFFAFAFA),\n    primary: Color(0xFFFAFAFA),\n    primaryForeground: Color(0xFF18181B),\n    secondary: Color(0xFF27272A),\n    secondaryForeground: Color(0xFFFAFAFA),\n    muted: Color(0xFF27272A),\n    mutedForeground: Color(0xFFA1A1AA),\n    destructive: Color(0xFF7F1D1D),\n    destructiveForeground: Color(0xFFFAFAFA),\n    error: Color(0xFF7F1D1D),\n    errorForeground: Color(0xFFFAFAFA),\n    border: Color(0xFF27272A),\n  );\n\n  final typography = _typography(colors: colors);\n  final style = _style(colors: colors, typography: typography);\n\n  return FThemeData(colors: colors, typography: typography, style: style);\n}\n\nFTypography _typography({\n  required FColors colors,\n  String defaultFontFamily = \'packages/forui/Inter\',\n}) => FTypography(\n  xs: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 12,\n    height: 1,\n  ),\n  sm: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 14,\n    height: 1.25,\n  ),\n  base: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 16,\n    height: 1.5,\n  ),\n  lg: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 18,\n    height: 1.75,\n  ),\n  xl: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 20,\n    height: 1.75,\n  ),\n  xl2: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 22,\n    height: 2,\n  ),\n  xl3: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 30,\n    height: 2.25,\n  ),\n  xl4: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 36,\n    height: 2.5,\n  ),\n  xl5: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 48,\n    height: 1,\n  ),\n  xl6: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 60,\n    height: 1,\n  ),\n  xl7: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 72,\n    height: 1,\n  ),\n  xl8: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 96,\n    height: 1,\n  ),\n);\n\nFStyle _style({required FColors colors, required FTypography typography}) =>\n    FStyle(\n      formFieldStyle: FFormFieldStyle.inherit(\n        colors: colors,\n        typography: typography,\n      ),\n      focusedOutlineStyle: FFocusedOutlineStyle(\n        color: colors.primary,\n        borderRadius: const BorderRadius.all(Radius.circular(8)),\n      ),\n      iconStyle: IconThemeData(color: colors.primary, size: 20),\n      tappableStyle: FTappableStyle(),\n      borderRadius: const FLerpBorderRadius.all(Radius.circular(8), min: 24),\n      borderWidth: 1,\n      pagePadding: const EdgeInsets.symmetric(vertical: 8, horizontal: 12),\n      shadow: const [\n        BoxShadow(\n          color: Color(0x0d000000),\n          offset: Offset(0, 1),\n          blurRadius: 2,\n        ),\n      ],\n    );\n',
  ),
  zincLight(
    'zinc-light',
    'FThemeData get zincLight {\n  const colors = FColors(\n    brightness: Brightness.light,\n    barrier: Color(0x33000000),\n    background: Color(0xFFFFFFFF),\n    foreground: Color(0xFF09090B),\n    primary: Color(0xFF18181B),\n    primaryForeground: Color(0xFFFAFAFA),\n    secondary: Color(0xFFF4F4F5),\n    secondaryForeground: Color(0xFF18181B),\n    muted: Color(0xFFF4F4F5),\n    mutedForeground: Color(0xFF71717A),\n    destructive: Color(0xFFEF4444),\n    destructiveForeground: Color(0xFFFAFAFA),\n    error: Color(0xFFEF4444),\n    errorForeground: Color(0xFFFAFAFA),\n    border: Color(0xFFE4E4E7),\n  );\n\n  final typography = _typography(colors: colors);\n  final style = _style(colors: colors, typography: typography);\n\n  return FThemeData(colors: colors, typography: typography, style: style);\n}\n\nFTypography _typography({\n  required FColors colors,\n  String defaultFontFamily = \'packages/forui/Inter\',\n}) => FTypography(\n  xs: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 12,\n    height: 1,\n  ),\n  sm: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 14,\n    height: 1.25,\n  ),\n  base: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 16,\n    height: 1.5,\n  ),\n  lg: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 18,\n    height: 1.75,\n  ),\n  xl: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 20,\n    height: 1.75,\n  ),\n  xl2: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 22,\n    height: 2,\n  ),\n  xl3: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 30,\n    height: 2.25,\n  ),\n  xl4: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 36,\n    height: 2.5,\n  ),\n  xl5: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 48,\n    height: 1,\n  ),\n  xl6: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 60,\n    height: 1,\n  ),\n  xl7: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 72,\n    height: 1,\n  ),\n  xl8: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 96,\n    height: 1,\n  ),\n);\n\nFStyle _style({required FColors colors, required FTypography typography}) =>\n    FStyle(\n      formFieldStyle: FFormFieldStyle.inherit(\n        colors: colors,\n        typography: typography,\n      ),\n      focusedOutlineStyle: FFocusedOutlineStyle(\n        color: colors.primary,\n        borderRadius: const BorderRadius.all(Radius.circular(8)),\n      ),\n      iconStyle: IconThemeData(color: colors.primary, size: 20),\n      tappableStyle: FTappableStyle(),\n      borderRadius: const FLerpBorderRadius.all(Radius.circular(8), min: 24),\n      borderWidth: 1,\n      pagePadding: const EdgeInsets.symmetric(vertical: 8, horizontal: 12),\n      shadow: const [\n        BoxShadow(\n          color: Color(0x0d000000),\n          offset: Offset(0, 1),\n          blurRadius: 2,\n        ),\n      ],\n    );\n',
  ),
  zincDark(
    'zinc-dark',
    'FThemeData get zincDark {\n  const colors = FColors(\n    brightness: Brightness.dark,\n    barrier: Color(0x7A000000),\n    background: Color(0xFF09090B),\n    foreground: Color(0xFFFAFAFA),\n    primary: Color(0xFFFAFAFA),\n    primaryForeground: Color(0xFF18181B),\n    secondary: Color(0xFF27272A),\n    secondaryForeground: Color(0xFFFAFAFA),\n    muted: Color(0xFF27272A),\n    mutedForeground: Color(0xFFA1A1AA),\n    destructive: Color(0xFF7F1D1D),\n    destructiveForeground: Color(0xFFFAFAFA),\n    error: Color(0xFF7F1D1D),\n    errorForeground: Color(0xFFFAFAFA),\n    border: Color(0xFF27272A),\n  );\n\n  final typography = _typography(colors: colors);\n  final style = _style(colors: colors, typography: typography);\n\n  return FThemeData(colors: colors, typography: typography, style: style);\n}\n\nFTypography _typography({\n  required FColors colors,\n  String defaultFontFamily = \'packages/forui/Inter\',\n}) => FTypography(\n  xs: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 12,\n    height: 1,\n  ),\n  sm: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 14,\n    height: 1.25,\n  ),\n  base: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 16,\n    height: 1.5,\n  ),\n  lg: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 18,\n    height: 1.75,\n  ),\n  xl: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 20,\n    height: 1.75,\n  ),\n  xl2: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 22,\n    height: 2,\n  ),\n  xl3: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 30,\n    height: 2.25,\n  ),\n  xl4: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 36,\n    height: 2.5,\n  ),\n  xl5: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 48,\n    height: 1,\n  ),\n  xl6: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 60,\n    height: 1,\n  ),\n  xl7: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 72,\n    height: 1,\n  ),\n  xl8: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 96,\n    height: 1,\n  ),\n);\n\nFStyle _style({required FColors colors, required FTypography typography}) =>\n    FStyle(\n      formFieldStyle: FFormFieldStyle.inherit(\n        colors: colors,\n        typography: typography,\n      ),\n      focusedOutlineStyle: FFocusedOutlineStyle(\n        color: colors.primary,\n        borderRadius: const BorderRadius.all(Radius.circular(8)),\n      ),\n      iconStyle: IconThemeData(color: colors.primary, size: 20),\n      tappableStyle: FTappableStyle(),\n      borderRadius: const FLerpBorderRadius.all(Radius.circular(8), min: 24),\n      borderWidth: 1,\n      pagePadding: const EdgeInsets.symmetric(vertical: 8, horizontal: 12),\n      shadow: const [\n        BoxShadow(\n          color: Color(0x0d000000),\n          offset: Offset(0, 1),\n          blurRadius: 2,\n        ),\n      ],\n    );\n',
  ),
  slate(
    'slate',
    'FThemeData get slateLight {\n  const colors = FColors(\n    brightness: Brightness.light,\n    barrier: Color(0x33000000),\n    background: Color(0xFFFFFFFF),\n    foreground: Color(0xFF020817),\n    primary: Color(0xFF0F172A),\n    primaryForeground: Color(0xFFF8FAFC),\n    secondary: Color(0xFFF1F5F9),\n    secondaryForeground: Color(0xFF0F172A),\n    muted: Color(0xFFF1F5F9),\n    mutedForeground: Color(0xFF64748B),\n    destructive: Color(0xFFEF4444),\n    destructiveForeground: Color(0xFFF8FAFC),\n    error: Color(0xFFEF4444),\n    errorForeground: Color(0xFFF8FAFC),\n    border: Color(0xFFE2E8F0),\n  );\n\n  final typography = _typography(colors: colors);\n  final style = _style(colors: colors, typography: typography);\n\n  return FThemeData(colors: colors, typography: typography, style: style);\n}\n\nFThemeData get slateDark {\n  const colors = FColors(\n    brightness: Brightness.dark,\n    barrier: Color(0x7A000000),\n    background: Color(0xFF020817),\n    foreground: Color(0xFFF8FAFC),\n    primary: Color(0xFFF8FAFC),\n    primaryForeground: Color(0xFF0F172A),\n    secondary: Color(0xFF1E293B),\n    secondaryForeground: Color(0xFFF8FAFC),\n    muted: Color(0xFF1E293B),\n    mutedForeground: Color(0xFF94A3B8),\n    destructive: Color(0xFF7F1D1D),\n    destructiveForeground: Color(0xFFF8FAFC),\n    error: Color(0xFF7F1D1D),\n    errorForeground: Color(0xFFF8FAFC),\n    border: Color(0xFF1E293B),\n  );\n\n  final typography = _typography(colors: colors);\n  final style = _style(colors: colors, typography: typography);\n\n  return FThemeData(colors: colors, typography: typography, style: style);\n}\n\nFTypography _typography({\n  required FColors colors,\n  String defaultFontFamily = \'packages/forui/Inter\',\n}) => FTypography(\n  xs: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 12,\n    height: 1,\n  ),\n  sm: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 14,\n    height: 1.25,\n  ),\n  base: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 16,\n    height: 1.5,\n  ),\n  lg: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 18,\n    height: 1.75,\n  ),\n  xl: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 20,\n    height: 1.75,\n  ),\n  xl2: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 22,\n    height: 2,\n  ),\n  xl3: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 30,\n    height: 2.25,\n  ),\n  xl4: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 36,\n    height: 2.5,\n  ),\n  xl5: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 48,\n    height: 1,\n  ),\n  xl6: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 60,\n    height: 1,\n  ),\n  xl7: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 72,\n    height: 1,\n  ),\n  xl8: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 96,\n    height: 1,\n  ),\n);\n\nFStyle _style({required FColors colors, required FTypography typography}) =>\n    FStyle(\n      formFieldStyle: FFormFieldStyle.inherit(\n        colors: colors,\n        typography: typography,\n      ),\n      focusedOutlineStyle: FFocusedOutlineStyle(\n        color: colors.primary,\n        borderRadius: const BorderRadius.all(Radius.circular(8)),\n      ),\n      iconStyle: IconThemeData(color: colors.primary, size: 20),\n      tappableStyle: FTappableStyle(),\n      borderRadius: const FLerpBorderRadius.all(Radius.circular(8), min: 24),\n      borderWidth: 1,\n      pagePadding: const EdgeInsets.symmetric(vertical: 8, horizontal: 12),\n      shadow: const [\n        BoxShadow(\n          color: Color(0x0d000000),\n          offset: Offset(0, 1),\n          blurRadius: 2,\n        ),\n      ],\n    );\n',
  ),
  slateLight(
    'slate-light',
    'FThemeData get slateLight {\n  const colors = FColors(\n    brightness: Brightness.light,\n    barrier: Color(0x33000000),\n    background: Color(0xFFFFFFFF),\n    foreground: Color(0xFF020817),\n    primary: Color(0xFF0F172A),\n    primaryForeground: Color(0xFFF8FAFC),\n    secondary: Color(0xFFF1F5F9),\n    secondaryForeground: Color(0xFF0F172A),\n    muted: Color(0xFFF1F5F9),\n    mutedForeground: Color(0xFF64748B),\n    destructive: Color(0xFFEF4444),\n    destructiveForeground: Color(0xFFF8FAFC),\n    error: Color(0xFFEF4444),\n    errorForeground: Color(0xFFF8FAFC),\n    border: Color(0xFFE2E8F0),\n  );\n\n  final typography = _typography(colors: colors);\n  final style = _style(colors: colors, typography: typography);\n\n  return FThemeData(colors: colors, typography: typography, style: style);\n}\n\nFTypography _typography({\n  required FColors colors,\n  String defaultFontFamily = \'packages/forui/Inter\',\n}) => FTypography(\n  xs: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 12,\n    height: 1,\n  ),\n  sm: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 14,\n    height: 1.25,\n  ),\n  base: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 16,\n    height: 1.5,\n  ),\n  lg: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 18,\n    height: 1.75,\n  ),\n  xl: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 20,\n    height: 1.75,\n  ),\n  xl2: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 22,\n    height: 2,\n  ),\n  xl3: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 30,\n    height: 2.25,\n  ),\n  xl4: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 36,\n    height: 2.5,\n  ),\n  xl5: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 48,\n    height: 1,\n  ),\n  xl6: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 60,\n    height: 1,\n  ),\n  xl7: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 72,\n    height: 1,\n  ),\n  xl8: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 96,\n    height: 1,\n  ),\n);\n\nFStyle _style({required FColors colors, required FTypography typography}) =>\n    FStyle(\n      formFieldStyle: FFormFieldStyle.inherit(\n        colors: colors,\n        typography: typography,\n      ),\n      focusedOutlineStyle: FFocusedOutlineStyle(\n        color: colors.primary,\n        borderRadius: const BorderRadius.all(Radius.circular(8)),\n      ),\n      iconStyle: IconThemeData(color: colors.primary, size: 20),\n      tappableStyle: FTappableStyle(),\n      borderRadius: const FLerpBorderRadius.all(Radius.circular(8), min: 24),\n      borderWidth: 1,\n      pagePadding: const EdgeInsets.symmetric(vertical: 8, horizontal: 12),\n      shadow: const [\n        BoxShadow(\n          color: Color(0x0d000000),\n          offset: Offset(0, 1),\n          blurRadius: 2,\n        ),\n      ],\n    );\n',
  ),
  slateDark(
    'slate-dark',
    'FThemeData get slateDark {\n  const colors = FColors(\n    brightness: Brightness.dark,\n    barrier: Color(0x7A000000),\n    background: Color(0xFF020817),\n    foreground: Color(0xFFF8FAFC),\n    primary: Color(0xFFF8FAFC),\n    primaryForeground: Color(0xFF0F172A),\n    secondary: Color(0xFF1E293B),\n    secondaryForeground: Color(0xFFF8FAFC),\n    muted: Color(0xFF1E293B),\n    mutedForeground: Color(0xFF94A3B8),\n    destructive: Color(0xFF7F1D1D),\n    destructiveForeground: Color(0xFFF8FAFC),\n    error: Color(0xFF7F1D1D),\n    errorForeground: Color(0xFFF8FAFC),\n    border: Color(0xFF1E293B),\n  );\n\n  final typography = _typography(colors: colors);\n  final style = _style(colors: colors, typography: typography);\n\n  return FThemeData(colors: colors, typography: typography, style: style);\n}\n\nFTypography _typography({\n  required FColors colors,\n  String defaultFontFamily = \'packages/forui/Inter\',\n}) => FTypography(\n  xs: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 12,\n    height: 1,\n  ),\n  sm: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 14,\n    height: 1.25,\n  ),\n  base: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 16,\n    height: 1.5,\n  ),\n  lg: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 18,\n    height: 1.75,\n  ),\n  xl: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 20,\n    height: 1.75,\n  ),\n  xl2: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 22,\n    height: 2,\n  ),\n  xl3: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 30,\n    height: 2.25,\n  ),\n  xl4: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 36,\n    height: 2.5,\n  ),\n  xl5: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 48,\n    height: 1,\n  ),\n  xl6: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 60,\n    height: 1,\n  ),\n  xl7: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 72,\n    height: 1,\n  ),\n  xl8: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 96,\n    height: 1,\n  ),\n);\n\nFStyle _style({required FColors colors, required FTypography typography}) =>\n    FStyle(\n      formFieldStyle: FFormFieldStyle.inherit(\n        colors: colors,\n        typography: typography,\n      ),\n      focusedOutlineStyle: FFocusedOutlineStyle(\n        color: colors.primary,\n        borderRadius: const BorderRadius.all(Radius.circular(8)),\n      ),\n      iconStyle: IconThemeData(color: colors.primary, size: 20),\n      tappableStyle: FTappableStyle(),\n      borderRadius: const FLerpBorderRadius.all(Radius.circular(8), min: 24),\n      borderWidth: 1,\n      pagePadding: const EdgeInsets.symmetric(vertical: 8, horizontal: 12),\n      shadow: const [\n        BoxShadow(\n          color: Color(0x0d000000),\n          offset: Offset(0, 1),\n          blurRadius: 2,\n        ),\n      ],\n    );\n',
  ),
  red(
    'red',
    'FThemeData get redLight {\n  const colors = FColors(\n    brightness: Brightness.light,\n    barrier: Color(0x33000000),\n    background: Color(0xFFFFFFFF),\n    foreground: Color(0xFF09090B),\n    primary: Color(0xFFDC2626),\n    primaryForeground: Color(0xFFFEF2F2),\n    secondary: Color(0xFFF5F5F5),\n    secondaryForeground: Color(0xFF171717),\n    muted: Color(0xFFF5F5F5),\n    mutedForeground: Color(0xFF71717A),\n    destructive: Color(0xFFEF4444),\n    destructiveForeground: Color(0xFFFAFAFA),\n    error: Color(0xFFEF4444),\n    errorForeground: Color(0xFFFAFAFA),\n    border: Color(0xFFE5E5E5),\n  );\n\n  final typography = _typography(colors: colors);\n  final style = _style(colors: colors, typography: typography);\n\n  return FThemeData(colors: colors, typography: typography, style: style);\n}\n\nFThemeData get redDark {\n  const colors = FColors(\n    brightness: Brightness.dark,\n    barrier: Color(0x7A000000),\n    background: Color(0xFF0A0A0A),\n    foreground: Color(0xFFFAFAFA),\n    primary: Color(0xFFDC2626),\n    primaryForeground: Color(0xFFFEF2F2),\n    secondary: Color(0xFF262626),\n    secondaryForeground: Color(0xFFFAFAFA),\n    muted: Color(0xFF262626),\n    mutedForeground: Color(0xFFA3A3A3),\n    destructive: Color(0xFF7F1D1D),\n    destructiveForeground: Color(0xFFFEF2F2),\n    error: Color(0xFF7F1D1D),\n    errorForeground: Color(0xFFFEF2F2),\n    border: Color(0xFF262626),\n  );\n\n  final typography = _typography(colors: colors);\n  final style = _style(colors: colors, typography: typography);\n\n  return FThemeData(colors: colors, typography: typography, style: style);\n}\n\nFTypography _typography({\n  required FColors colors,\n  String defaultFontFamily = \'packages/forui/Inter\',\n}) => FTypography(\n  xs: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 12,\n    height: 1,\n  ),\n  sm: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 14,\n    height: 1.25,\n  ),\n  base: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 16,\n    height: 1.5,\n  ),\n  lg: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 18,\n    height: 1.75,\n  ),\n  xl: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 20,\n    height: 1.75,\n  ),\n  xl2: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 22,\n    height: 2,\n  ),\n  xl3: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 30,\n    height: 2.25,\n  ),\n  xl4: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 36,\n    height: 2.5,\n  ),\n  xl5: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 48,\n    height: 1,\n  ),\n  xl6: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 60,\n    height: 1,\n  ),\n  xl7: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 72,\n    height: 1,\n  ),\n  xl8: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 96,\n    height: 1,\n  ),\n);\n\nFStyle _style({required FColors colors, required FTypography typography}) =>\n    FStyle(\n      formFieldStyle: FFormFieldStyle.inherit(\n        colors: colors,\n        typography: typography,\n      ),\n      focusedOutlineStyle: FFocusedOutlineStyle(\n        color: colors.primary,\n        borderRadius: const BorderRadius.all(Radius.circular(8)),\n      ),\n      iconStyle: IconThemeData(color: colors.primary, size: 20),\n      tappableStyle: FTappableStyle(),\n      borderRadius: const FLerpBorderRadius.all(Radius.circular(8), min: 24),\n      borderWidth: 1,\n      pagePadding: const EdgeInsets.symmetric(vertical: 8, horizontal: 12),\n      shadow: const [\n        BoxShadow(\n          color: Color(0x0d000000),\n          offset: Offset(0, 1),\n          blurRadius: 2,\n        ),\n      ],\n    );\n',
  ),
  redLight(
    'red-light',
    'FThemeData get redLight {\n  const colors = FColors(\n    brightness: Brightness.light,\n    barrier: Color(0x33000000),\n    background: Color(0xFFFFFFFF),\n    foreground: Color(0xFF09090B),\n    primary: Color(0xFFDC2626),\n    primaryForeground: Color(0xFFFEF2F2),\n    secondary: Color(0xFFF5F5F5),\n    secondaryForeground: Color(0xFF171717),\n    muted: Color(0xFFF5F5F5),\n    mutedForeground: Color(0xFF71717A),\n    destructive: Color(0xFFEF4444),\n    destructiveForeground: Color(0xFFFAFAFA),\n    error: Color(0xFFEF4444),\n    errorForeground: Color(0xFFFAFAFA),\n    border: Color(0xFFE5E5E5),\n  );\n\n  final typography = _typography(colors: colors);\n  final style = _style(colors: colors, typography: typography);\n\n  return FThemeData(colors: colors, typography: typography, style: style);\n}\n\nFTypography _typography({\n  required FColors colors,\n  String defaultFontFamily = \'packages/forui/Inter\',\n}) => FTypography(\n  xs: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 12,\n    height: 1,\n  ),\n  sm: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 14,\n    height: 1.25,\n  ),\n  base: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 16,\n    height: 1.5,\n  ),\n  lg: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 18,\n    height: 1.75,\n  ),\n  xl: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 20,\n    height: 1.75,\n  ),\n  xl2: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 22,\n    height: 2,\n  ),\n  xl3: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 30,\n    height: 2.25,\n  ),\n  xl4: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 36,\n    height: 2.5,\n  ),\n  xl5: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 48,\n    height: 1,\n  ),\n  xl6: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 60,\n    height: 1,\n  ),\n  xl7: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 72,\n    height: 1,\n  ),\n  xl8: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 96,\n    height: 1,\n  ),\n);\n\nFStyle _style({required FColors colors, required FTypography typography}) =>\n    FStyle(\n      formFieldStyle: FFormFieldStyle.inherit(\n        colors: colors,\n        typography: typography,\n      ),\n      focusedOutlineStyle: FFocusedOutlineStyle(\n        color: colors.primary,\n        borderRadius: const BorderRadius.all(Radius.circular(8)),\n      ),\n      iconStyle: IconThemeData(color: colors.primary, size: 20),\n      tappableStyle: FTappableStyle(),\n      borderRadius: const FLerpBorderRadius.all(Radius.circular(8), min: 24),\n      borderWidth: 1,\n      pagePadding: const EdgeInsets.symmetric(vertical: 8, horizontal: 12),\n      shadow: const [\n        BoxShadow(\n          color: Color(0x0d000000),\n          offset: Offset(0, 1),\n          blurRadius: 2,\n        ),\n      ],\n    );\n',
  ),
  redDark(
    'red-dark',
    'FThemeData get redDark {\n  const colors = FColors(\n    brightness: Brightness.dark,\n    barrier: Color(0x7A000000),\n    background: Color(0xFF0A0A0A),\n    foreground: Color(0xFFFAFAFA),\n    primary: Color(0xFFDC2626),\n    primaryForeground: Color(0xFFFEF2F2),\n    secondary: Color(0xFF262626),\n    secondaryForeground: Color(0xFFFAFAFA),\n    muted: Color(0xFF262626),\n    mutedForeground: Color(0xFFA3A3A3),\n    destructive: Color(0xFF7F1D1D),\n    destructiveForeground: Color(0xFFFEF2F2),\n    error: Color(0xFF7F1D1D),\n    errorForeground: Color(0xFFFEF2F2),\n    border: Color(0xFF262626),\n  );\n\n  final typography = _typography(colors: colors);\n  final style = _style(colors: colors, typography: typography);\n\n  return FThemeData(colors: colors, typography: typography, style: style);\n}\n\nFTypography _typography({\n  required FColors colors,\n  String defaultFontFamily = \'packages/forui/Inter\',\n}) => FTypography(\n  xs: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 12,\n    height: 1,\n  ),\n  sm: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 14,\n    height: 1.25,\n  ),\n  base: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 16,\n    height: 1.5,\n  ),\n  lg: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 18,\n    height: 1.75,\n  ),\n  xl: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 20,\n    height: 1.75,\n  ),\n  xl2: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 22,\n    height: 2,\n  ),\n  xl3: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 30,\n    height: 2.25,\n  ),\n  xl4: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 36,\n    height: 2.5,\n  ),\n  xl5: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 48,\n    height: 1,\n  ),\n  xl6: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 60,\n    height: 1,\n  ),\n  xl7: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 72,\n    height: 1,\n  ),\n  xl8: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 96,\n    height: 1,\n  ),\n);\n\nFStyle _style({required FColors colors, required FTypography typography}) =>\n    FStyle(\n      formFieldStyle: FFormFieldStyle.inherit(\n        colors: colors,\n        typography: typography,\n      ),\n      focusedOutlineStyle: FFocusedOutlineStyle(\n        color: colors.primary,\n        borderRadius: const BorderRadius.all(Radius.circular(8)),\n      ),\n      iconStyle: IconThemeData(color: colors.primary, size: 20),\n      tappableStyle: FTappableStyle(),\n      borderRadius: const FLerpBorderRadius.all(Radius.circular(8), min: 24),\n      borderWidth: 1,\n      pagePadding: const EdgeInsets.symmetric(vertical: 8, horizontal: 12),\n      shadow: const [\n        BoxShadow(\n          color: Color(0x0d000000),\n          offset: Offset(0, 1),\n          blurRadius: 2,\n        ),\n      ],\n    );\n',
  ),
  rose(
    'rose',
    'FThemeData get roseLight {\n  const colors = FColors(\n    brightness: Brightness.light,\n    barrier: Color(0x33000000),\n    background: Color(0xFFFFFFFF),\n    foreground: Color(0xFF09090B),\n    primary: Color(0xFFE11D48),\n    primaryForeground: Color(0xFFFFF1F2),\n    secondary: Color(0xFFF4F4F5),\n    secondaryForeground: Color(0xFF18181B),\n    muted: Color(0xFFF4F4F5),\n    mutedForeground: Color(0xFF71717A),\n    destructive: Color(0xFFEF4444),\n    destructiveForeground: Color(0xFFFAFAFA),\n    error: Color(0xFFEF4444),\n    errorForeground: Color(0xFFFAFAFA),\n    border: Color(0xFFE4E4E7),\n  );\n\n  final typography = _typography(colors: colors);\n  final style = _style(colors: colors, typography: typography);\n\n  return FThemeData(colors: colors, typography: typography, style: style);\n}\n\nFThemeData get roseDark {\n  const colors = FColors(\n    brightness: Brightness.dark,\n    barrier: Color(0x7A000000),\n    background: Color(0xFF0C0A09),\n    foreground: Color(0xFFF2F2F2),\n    primary: Color(0xFFE11D48),\n    primaryForeground: Color(0xFFFFF1F2),\n    secondary: Color(0xFF27272A),\n    secondaryForeground: Color(0xFFFAFAFA),\n    muted: Color(0xFF262626),\n    mutedForeground: Color(0xFFA1A1AA),\n    destructive: Color(0xFF7F1D1D),\n    destructiveForeground: Color(0xFFFEF2F2),\n    error: Color(0xFF7F1D1D),\n    errorForeground: Color(0xFFFEF2F2),\n    border: Color(0xFF27272A),\n  );\n\n  final typography = _typography(colors: colors);\n  final style = _style(colors: colors, typography: typography);\n\n  return FThemeData(colors: colors, typography: typography, style: style);\n}\n\nFTypography _typography({\n  required FColors colors,\n  String defaultFontFamily = \'packages/forui/Inter\',\n}) => FTypography(\n  xs: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 12,\n    height: 1,\n  ),\n  sm: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 14,\n    height: 1.25,\n  ),\n  base: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 16,\n    height: 1.5,\n  ),\n  lg: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 18,\n    height: 1.75,\n  ),\n  xl: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 20,\n    height: 1.75,\n  ),\n  xl2: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 22,\n    height: 2,\n  ),\n  xl3: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 30,\n    height: 2.25,\n  ),\n  xl4: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 36,\n    height: 2.5,\n  ),\n  xl5: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 48,\n    height: 1,\n  ),\n  xl6: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 60,\n    height: 1,\n  ),\n  xl7: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 72,\n    height: 1,\n  ),\n  xl8: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 96,\n    height: 1,\n  ),\n);\n\nFStyle _style({required FColors colors, required FTypography typography}) =>\n    FStyle(\n      formFieldStyle: FFormFieldStyle.inherit(\n        colors: colors,\n        typography: typography,\n      ),\n      focusedOutlineStyle: FFocusedOutlineStyle(\n        color: colors.primary,\n        borderRadius: const BorderRadius.all(Radius.circular(8)),\n      ),\n      iconStyle: IconThemeData(color: colors.primary, size: 20),\n      tappableStyle: FTappableStyle(),\n      borderRadius: const FLerpBorderRadius.all(Radius.circular(8), min: 24),\n      borderWidth: 1,\n      pagePadding: const EdgeInsets.symmetric(vertical: 8, horizontal: 12),\n      shadow: const [\n        BoxShadow(\n          color: Color(0x0d000000),\n          offset: Offset(0, 1),\n          blurRadius: 2,\n        ),\n      ],\n    );\n',
  ),
  roseLight(
    'rose-light',
    'FThemeData get roseLight {\n  const colors = FColors(\n    brightness: Brightness.light,\n    barrier: Color(0x33000000),\n    background: Color(0xFFFFFFFF),\n    foreground: Color(0xFF09090B),\n    primary: Color(0xFFE11D48),\n    primaryForeground: Color(0xFFFFF1F2),\n    secondary: Color(0xFFF4F4F5),\n    secondaryForeground: Color(0xFF18181B),\n    muted: Color(0xFFF4F4F5),\n    mutedForeground: Color(0xFF71717A),\n    destructive: Color(0xFFEF4444),\n    destructiveForeground: Color(0xFFFAFAFA),\n    error: Color(0xFFEF4444),\n    errorForeground: Color(0xFFFAFAFA),\n    border: Color(0xFFE4E4E7),\n  );\n\n  final typography = _typography(colors: colors);\n  final style = _style(colors: colors, typography: typography);\n\n  return FThemeData(colors: colors, typography: typography, style: style);\n}\n\nFTypography _typography({\n  required FColors colors,\n  String defaultFontFamily = \'packages/forui/Inter\',\n}) => FTypography(\n  xs: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 12,\n    height: 1,\n  ),\n  sm: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 14,\n    height: 1.25,\n  ),\n  base: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 16,\n    height: 1.5,\n  ),\n  lg: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 18,\n    height: 1.75,\n  ),\n  xl: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 20,\n    height: 1.75,\n  ),\n  xl2: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 22,\n    height: 2,\n  ),\n  xl3: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 30,\n    height: 2.25,\n  ),\n  xl4: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 36,\n    height: 2.5,\n  ),\n  xl5: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 48,\n    height: 1,\n  ),\n  xl6: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 60,\n    height: 1,\n  ),\n  xl7: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 72,\n    height: 1,\n  ),\n  xl8: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 96,\n    height: 1,\n  ),\n);\n\nFStyle _style({required FColors colors, required FTypography typography}) =>\n    FStyle(\n      formFieldStyle: FFormFieldStyle.inherit(\n        colors: colors,\n        typography: typography,\n      ),\n      focusedOutlineStyle: FFocusedOutlineStyle(\n        color: colors.primary,\n        borderRadius: const BorderRadius.all(Radius.circular(8)),\n      ),\n      iconStyle: IconThemeData(color: colors.primary, size: 20),\n      tappableStyle: FTappableStyle(),\n      borderRadius: const FLerpBorderRadius.all(Radius.circular(8), min: 24),\n      borderWidth: 1,\n      pagePadding: const EdgeInsets.symmetric(vertical: 8, horizontal: 12),\n      shadow: const [\n        BoxShadow(\n          color: Color(0x0d000000),\n          offset: Offset(0, 1),\n          blurRadius: 2,\n        ),\n      ],\n    );\n',
  ),
  roseDark(
    'rose-dark',
    'FThemeData get roseDark {\n  const colors = FColors(\n    brightness: Brightness.dark,\n    barrier: Color(0x7A000000),\n    background: Color(0xFF0C0A09),\n    foreground: Color(0xFFF2F2F2),\n    primary: Color(0xFFE11D48),\n    primaryForeground: Color(0xFFFFF1F2),\n    secondary: Color(0xFF27272A),\n    secondaryForeground: Color(0xFFFAFAFA),\n    muted: Color(0xFF262626),\n    mutedForeground: Color(0xFFA1A1AA),\n    destructive: Color(0xFF7F1D1D),\n    destructiveForeground: Color(0xFFFEF2F2),\n    error: Color(0xFF7F1D1D),\n    errorForeground: Color(0xFFFEF2F2),\n    border: Color(0xFF27272A),\n  );\n\n  final typography = _typography(colors: colors);\n  final style = _style(colors: colors, typography: typography);\n\n  return FThemeData(colors: colors, typography: typography, style: style);\n}\n\nFTypography _typography({\n  required FColors colors,\n  String defaultFontFamily = \'packages/forui/Inter\',\n}) => FTypography(\n  xs: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 12,\n    height: 1,\n  ),\n  sm: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 14,\n    height: 1.25,\n  ),\n  base: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 16,\n    height: 1.5,\n  ),\n  lg: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 18,\n    height: 1.75,\n  ),\n  xl: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 20,\n    height: 1.75,\n  ),\n  xl2: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 22,\n    height: 2,\n  ),\n  xl3: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 30,\n    height: 2.25,\n  ),\n  xl4: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 36,\n    height: 2.5,\n  ),\n  xl5: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 48,\n    height: 1,\n  ),\n  xl6: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 60,\n    height: 1,\n  ),\n  xl7: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 72,\n    height: 1,\n  ),\n  xl8: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 96,\n    height: 1,\n  ),\n);\n\nFStyle _style({required FColors colors, required FTypography typography}) =>\n    FStyle(\n      formFieldStyle: FFormFieldStyle.inherit(\n        colors: colors,\n        typography: typography,\n      ),\n      focusedOutlineStyle: FFocusedOutlineStyle(\n        color: colors.primary,\n        borderRadius: const BorderRadius.all(Radius.circular(8)),\n      ),\n      iconStyle: IconThemeData(color: colors.primary, size: 20),\n      tappableStyle: FTappableStyle(),\n      borderRadius: const FLerpBorderRadius.all(Radius.circular(8), min: 24),\n      borderWidth: 1,\n      pagePadding: const EdgeInsets.symmetric(vertical: 8, horizontal: 12),\n      shadow: const [\n        BoxShadow(\n          color: Color(0x0d000000),\n          offset: Offset(0, 1),\n          blurRadius: 2,\n        ),\n      ],\n    );\n',
  ),
  orange(
    'orange',
    'FThemeData get orangeLight {\n  const colors = FColors(\n    brightness: Brightness.light,\n    barrier: Color(0x33000000),\n    background: Color(0xFFFFFFFF),\n    foreground: Color(0xFF0C0A09),\n    primary: Color(0xFFF97316),\n    primaryForeground: Color(0xFFFFF1F2),\n    secondary: Color(0xFFF5F5F4),\n    secondaryForeground: Color(0xFF1C1917),\n    muted: Color(0xFFF5F5F4),\n    mutedForeground: Color(0xFF78716C),\n    destructive: Color(0xFFEF4444),\n    destructiveForeground: Color(0xFFFAFAF9),\n    error: Color(0xFFEF4444),\n    errorForeground: Color(0xFFFAFAF9),\n    border: Color(0xFFE4E4E7),\n  );\n\n  final typography = _typography(colors: colors);\n  final style = _style(colors: colors, typography: typography);\n\n  return FThemeData(colors: colors, typography: typography, style: style);\n}\n\nFThemeData get orangeDark {\n  const colors = FColors(\n    brightness: Brightness.dark,\n    barrier: Color(0x7A000000),\n    background: Color(0xFF0C0A09),\n    foreground: Color(0xFFFAFAF9),\n    primary: Color(0xFFEA580C),\n    primaryForeground: Color(0xFFFAFAF9),\n    secondary: Color(0xFF292524),\n    secondaryForeground: Color(0xFFFAFAF9),\n    muted: Color(0xFF292524),\n    mutedForeground: Color(0xFFA8A29E),\n    destructive: Color(0xFFDC2626),\n    destructiveForeground: Color(0xFFFAFAF9),\n    error: Color(0xFF7F1D1D),\n    errorForeground: Color(0xFFFAFAF9),\n    border: Color(0xFF292524),\n  );\n\n  final typography = _typography(colors: colors);\n  final style = _style(colors: colors, typography: typography);\n\n  return FThemeData(colors: colors, typography: typography, style: style);\n}\n\nFTypography _typography({\n  required FColors colors,\n  String defaultFontFamily = \'packages/forui/Inter\',\n}) => FTypography(\n  xs: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 12,\n    height: 1,\n  ),\n  sm: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 14,\n    height: 1.25,\n  ),\n  base: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 16,\n    height: 1.5,\n  ),\n  lg: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 18,\n    height: 1.75,\n  ),\n  xl: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 20,\n    height: 1.75,\n  ),\n  xl2: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 22,\n    height: 2,\n  ),\n  xl3: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 30,\n    height: 2.25,\n  ),\n  xl4: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 36,\n    height: 2.5,\n  ),\n  xl5: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 48,\n    height: 1,\n  ),\n  xl6: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 60,\n    height: 1,\n  ),\n  xl7: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 72,\n    height: 1,\n  ),\n  xl8: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 96,\n    height: 1,\n  ),\n);\n\nFStyle _style({required FColors colors, required FTypography typography}) =>\n    FStyle(\n      formFieldStyle: FFormFieldStyle.inherit(\n        colors: colors,\n        typography: typography,\n      ),\n      focusedOutlineStyle: FFocusedOutlineStyle(\n        color: colors.primary,\n        borderRadius: const BorderRadius.all(Radius.circular(8)),\n      ),\n      iconStyle: IconThemeData(color: colors.primary, size: 20),\n      tappableStyle: FTappableStyle(),\n      borderRadius: const FLerpBorderRadius.all(Radius.circular(8), min: 24),\n      borderWidth: 1,\n      pagePadding: const EdgeInsets.symmetric(vertical: 8, horizontal: 12),\n      shadow: const [\n        BoxShadow(\n          color: Color(0x0d000000),\n          offset: Offset(0, 1),\n          blurRadius: 2,\n        ),\n      ],\n    );\n',
  ),
  orangeLight(
    'orange-light',
    'FThemeData get orangeLight {\n  const colors = FColors(\n    brightness: Brightness.light,\n    barrier: Color(0x33000000),\n    background: Color(0xFFFFFFFF),\n    foreground: Color(0xFF0C0A09),\n    primary: Color(0xFFF97316),\n    primaryForeground: Color(0xFFFFF1F2),\n    secondary: Color(0xFFF5F5F4),\n    secondaryForeground: Color(0xFF1C1917),\n    muted: Color(0xFFF5F5F4),\n    mutedForeground: Color(0xFF78716C),\n    destructive: Color(0xFFEF4444),\n    destructiveForeground: Color(0xFFFAFAF9),\n    error: Color(0xFFEF4444),\n    errorForeground: Color(0xFFFAFAF9),\n    border: Color(0xFFE4E4E7),\n  );\n\n  final typography = _typography(colors: colors);\n  final style = _style(colors: colors, typography: typography);\n\n  return FThemeData(colors: colors, typography: typography, style: style);\n}\n\nFTypography _typography({\n  required FColors colors,\n  String defaultFontFamily = \'packages/forui/Inter\',\n}) => FTypography(\n  xs: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 12,\n    height: 1,\n  ),\n  sm: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 14,\n    height: 1.25,\n  ),\n  base: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 16,\n    height: 1.5,\n  ),\n  lg: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 18,\n    height: 1.75,\n  ),\n  xl: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 20,\n    height: 1.75,\n  ),\n  xl2: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 22,\n    height: 2,\n  ),\n  xl3: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 30,\n    height: 2.25,\n  ),\n  xl4: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 36,\n    height: 2.5,\n  ),\n  xl5: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 48,\n    height: 1,\n  ),\n  xl6: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 60,\n    height: 1,\n  ),\n  xl7: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 72,\n    height: 1,\n  ),\n  xl8: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 96,\n    height: 1,\n  ),\n);\n\nFStyle _style({required FColors colors, required FTypography typography}) =>\n    FStyle(\n      formFieldStyle: FFormFieldStyle.inherit(\n        colors: colors,\n        typography: typography,\n      ),\n      focusedOutlineStyle: FFocusedOutlineStyle(\n        color: colors.primary,\n        borderRadius: const BorderRadius.all(Radius.circular(8)),\n      ),\n      iconStyle: IconThemeData(color: colors.primary, size: 20),\n      tappableStyle: FTappableStyle(),\n      borderRadius: const FLerpBorderRadius.all(Radius.circular(8), min: 24),\n      borderWidth: 1,\n      pagePadding: const EdgeInsets.symmetric(vertical: 8, horizontal: 12),\n      shadow: const [\n        BoxShadow(\n          color: Color(0x0d000000),\n          offset: Offset(0, 1),\n          blurRadius: 2,\n        ),\n      ],\n    );\n',
  ),
  orangeDark(
    'orange-dark',
    'FThemeData get orangeDark {\n  const colors = FColors(\n    brightness: Brightness.dark,\n    barrier: Color(0x7A000000),\n    background: Color(0xFF0C0A09),\n    foreground: Color(0xFFFAFAF9),\n    primary: Color(0xFFEA580C),\n    primaryForeground: Color(0xFFFAFAF9),\n    secondary: Color(0xFF292524),\n    secondaryForeground: Color(0xFFFAFAF9),\n    muted: Color(0xFF292524),\n    mutedForeground: Color(0xFFA8A29E),\n    destructive: Color(0xFFDC2626),\n    destructiveForeground: Color(0xFFFAFAF9),\n    error: Color(0xFF7F1D1D),\n    errorForeground: Color(0xFFFAFAF9),\n    border: Color(0xFF292524),\n  );\n\n  final typography = _typography(colors: colors);\n  final style = _style(colors: colors, typography: typography);\n\n  return FThemeData(colors: colors, typography: typography, style: style);\n}\n\nFTypography _typography({\n  required FColors colors,\n  String defaultFontFamily = \'packages/forui/Inter\',\n}) => FTypography(\n  xs: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 12,\n    height: 1,\n  ),\n  sm: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 14,\n    height: 1.25,\n  ),\n  base: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 16,\n    height: 1.5,\n  ),\n  lg: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 18,\n    height: 1.75,\n  ),\n  xl: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 20,\n    height: 1.75,\n  ),\n  xl2: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 22,\n    height: 2,\n  ),\n  xl3: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 30,\n    height: 2.25,\n  ),\n  xl4: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 36,\n    height: 2.5,\n  ),\n  xl5: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 48,\n    height: 1,\n  ),\n  xl6: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 60,\n    height: 1,\n  ),\n  xl7: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 72,\n    height: 1,\n  ),\n  xl8: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 96,\n    height: 1,\n  ),\n);\n\nFStyle _style({required FColors colors, required FTypography typography}) =>\n    FStyle(\n      formFieldStyle: FFormFieldStyle.inherit(\n        colors: colors,\n        typography: typography,\n      ),\n      focusedOutlineStyle: FFocusedOutlineStyle(\n        color: colors.primary,\n        borderRadius: const BorderRadius.all(Radius.circular(8)),\n      ),\n      iconStyle: IconThemeData(color: colors.primary, size: 20),\n      tappableStyle: FTappableStyle(),\n      borderRadius: const FLerpBorderRadius.all(Radius.circular(8), min: 24),\n      borderWidth: 1,\n      pagePadding: const EdgeInsets.symmetric(vertical: 8, horizontal: 12),\n      shadow: const [\n        BoxShadow(\n          color: Color(0x0d000000),\n          offset: Offset(0, 1),\n          blurRadius: 2,\n        ),\n      ],\n    );\n',
  ),
  green(
    'green',
    'FThemeData get greenLight {\n  const colors = FColors(\n    brightness: Brightness.light,\n    barrier: Color(0x33000000),\n    background: Color(0xFFFFFFFF),\n    foreground: Color(0xFF09090B),\n    primary: Color(0xFF16A34A),\n    primaryForeground: Color(0xFFFFF1F2),\n    secondary: Color(0xFFF4F4F5),\n    secondaryForeground: Color(0xFF18181B),\n    muted: Color(0xFFF4F4F5),\n    mutedForeground: Color(0xFF71717A),\n    destructive: Color(0xFFEF4444),\n    destructiveForeground: Color(0xFFFAFAFA),\n    error: Color(0xFFEF4444),\n    errorForeground: Color(0xFFFAFAFA),\n    border: Color(0xFFE4E4E7),\n  );\n\n  final typography = _typography(colors: colors);\n  final style = _style(colors: colors, typography: typography);\n\n  return FThemeData(colors: colors, typography: typography, style: style);\n}\n\nFThemeData get greenDark {\n  const colors = FColors(\n    brightness: Brightness.dark,\n    barrier: Color(0x7A000000),\n    background: Color(0xFF0C0A09),\n    foreground: Color(0xFFF2F2F2),\n    primary: Color(0xFF22C55E),\n    primaryForeground: Color(0xFF052E16),\n    secondary: Color(0xFF27272A),\n    secondaryForeground: Color(0xFFFAFAFA),\n    muted: Color(0xFF262626),\n    mutedForeground: Color(0xFFA1A1AA),\n    destructive: Color(0xFF7F1D1D),\n    destructiveForeground: Color(0xFFFEF2F2),\n    error: Color(0xFF7F1D1D),\n    errorForeground: Color(0xFFFEF2F2),\n    border: Color(0xFF27272A),\n  );\n\n  final typography = _typography(colors: colors);\n  final style = _style(colors: colors, typography: typography);\n\n  return FThemeData(colors: colors, typography: typography, style: style);\n}\n\nFTypography _typography({\n  required FColors colors,\n  String defaultFontFamily = \'packages/forui/Inter\',\n}) => FTypography(\n  xs: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 12,\n    height: 1,\n  ),\n  sm: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 14,\n    height: 1.25,\n  ),\n  base: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 16,\n    height: 1.5,\n  ),\n  lg: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 18,\n    height: 1.75,\n  ),\n  xl: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 20,\n    height: 1.75,\n  ),\n  xl2: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 22,\n    height: 2,\n  ),\n  xl3: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 30,\n    height: 2.25,\n  ),\n  xl4: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 36,\n    height: 2.5,\n  ),\n  xl5: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 48,\n    height: 1,\n  ),\n  xl6: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 60,\n    height: 1,\n  ),\n  xl7: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 72,\n    height: 1,\n  ),\n  xl8: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 96,\n    height: 1,\n  ),\n);\n\nFStyle _style({required FColors colors, required FTypography typography}) =>\n    FStyle(\n      formFieldStyle: FFormFieldStyle.inherit(\n        colors: colors,\n        typography: typography,\n      ),\n      focusedOutlineStyle: FFocusedOutlineStyle(\n        color: colors.primary,\n        borderRadius: const BorderRadius.all(Radius.circular(8)),\n      ),\n      iconStyle: IconThemeData(color: colors.primary, size: 20),\n      tappableStyle: FTappableStyle(),\n      borderRadius: const FLerpBorderRadius.all(Radius.circular(8), min: 24),\n      borderWidth: 1,\n      pagePadding: const EdgeInsets.symmetric(vertical: 8, horizontal: 12),\n      shadow: const [\n        BoxShadow(\n          color: Color(0x0d000000),\n          offset: Offset(0, 1),\n          blurRadius: 2,\n        ),\n      ],\n    );\n',
  ),
  greenLight(
    'green-light',
    'FThemeData get greenLight {\n  const colors = FColors(\n    brightness: Brightness.light,\n    barrier: Color(0x33000000),\n    background: Color(0xFFFFFFFF),\n    foreground: Color(0xFF09090B),\n    primary: Color(0xFF16A34A),\n    primaryForeground: Color(0xFFFFF1F2),\n    secondary: Color(0xFFF4F4F5),\n    secondaryForeground: Color(0xFF18181B),\n    muted: Color(0xFFF4F4F5),\n    mutedForeground: Color(0xFF71717A),\n    destructive: Color(0xFFEF4444),\n    destructiveForeground: Color(0xFFFAFAFA),\n    error: Color(0xFFEF4444),\n    errorForeground: Color(0xFFFAFAFA),\n    border: Color(0xFFE4E4E7),\n  );\n\n  final typography = _typography(colors: colors);\n  final style = _style(colors: colors, typography: typography);\n\n  return FThemeData(colors: colors, typography: typography, style: style);\n}\n\nFTypography _typography({\n  required FColors colors,\n  String defaultFontFamily = \'packages/forui/Inter\',\n}) => FTypography(\n  xs: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 12,\n    height: 1,\n  ),\n  sm: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 14,\n    height: 1.25,\n  ),\n  base: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 16,\n    height: 1.5,\n  ),\n  lg: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 18,\n    height: 1.75,\n  ),\n  xl: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 20,\n    height: 1.75,\n  ),\n  xl2: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 22,\n    height: 2,\n  ),\n  xl3: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 30,\n    height: 2.25,\n  ),\n  xl4: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 36,\n    height: 2.5,\n  ),\n  xl5: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 48,\n    height: 1,\n  ),\n  xl6: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 60,\n    height: 1,\n  ),\n  xl7: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 72,\n    height: 1,\n  ),\n  xl8: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 96,\n    height: 1,\n  ),\n);\n\nFStyle _style({required FColors colors, required FTypography typography}) =>\n    FStyle(\n      formFieldStyle: FFormFieldStyle.inherit(\n        colors: colors,\n        typography: typography,\n      ),\n      focusedOutlineStyle: FFocusedOutlineStyle(\n        color: colors.primary,\n        borderRadius: const BorderRadius.all(Radius.circular(8)),\n      ),\n      iconStyle: IconThemeData(color: colors.primary, size: 20),\n      tappableStyle: FTappableStyle(),\n      borderRadius: const FLerpBorderRadius.all(Radius.circular(8), min: 24),\n      borderWidth: 1,\n      pagePadding: const EdgeInsets.symmetric(vertical: 8, horizontal: 12),\n      shadow: const [\n        BoxShadow(\n          color: Color(0x0d000000),\n          offset: Offset(0, 1),\n          blurRadius: 2,\n        ),\n      ],\n    );\n',
  ),
  greenDark(
    'green-dark',
    'FThemeData get greenDark {\n  const colors = FColors(\n    brightness: Brightness.dark,\n    barrier: Color(0x7A000000),\n    background: Color(0xFF0C0A09),\n    foreground: Color(0xFFF2F2F2),\n    primary: Color(0xFF22C55E),\n    primaryForeground: Color(0xFF052E16),\n    secondary: Color(0xFF27272A),\n    secondaryForeground: Color(0xFFFAFAFA),\n    muted: Color(0xFF262626),\n    mutedForeground: Color(0xFFA1A1AA),\n    destructive: Color(0xFF7F1D1D),\n    destructiveForeground: Color(0xFFFEF2F2),\n    error: Color(0xFF7F1D1D),\n    errorForeground: Color(0xFFFEF2F2),\n    border: Color(0xFF27272A),\n  );\n\n  final typography = _typography(colors: colors);\n  final style = _style(colors: colors, typography: typography);\n\n  return FThemeData(colors: colors, typography: typography, style: style);\n}\n\nFTypography _typography({\n  required FColors colors,\n  String defaultFontFamily = \'packages/forui/Inter\',\n}) => FTypography(\n  xs: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 12,\n    height: 1,\n  ),\n  sm: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 14,\n    height: 1.25,\n  ),\n  base: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 16,\n    height: 1.5,\n  ),\n  lg: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 18,\n    height: 1.75,\n  ),\n  xl: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 20,\n    height: 1.75,\n  ),\n  xl2: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 22,\n    height: 2,\n  ),\n  xl3: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 30,\n    height: 2.25,\n  ),\n  xl4: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 36,\n    height: 2.5,\n  ),\n  xl5: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 48,\n    height: 1,\n  ),\n  xl6: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 60,\n    height: 1,\n  ),\n  xl7: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 72,\n    height: 1,\n  ),\n  xl8: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 96,\n    height: 1,\n  ),\n);\n\nFStyle _style({required FColors colors, required FTypography typography}) =>\n    FStyle(\n      formFieldStyle: FFormFieldStyle.inherit(\n        colors: colors,\n        typography: typography,\n      ),\n      focusedOutlineStyle: FFocusedOutlineStyle(\n        color: colors.primary,\n        borderRadius: const BorderRadius.all(Radius.circular(8)),\n      ),\n      iconStyle: IconThemeData(color: colors.primary, size: 20),\n      tappableStyle: FTappableStyle(),\n      borderRadius: const FLerpBorderRadius.all(Radius.circular(8), min: 24),\n      borderWidth: 1,\n      pagePadding: const EdgeInsets.symmetric(vertical: 8, horizontal: 12),\n      shadow: const [\n        BoxShadow(\n          color: Color(0x0d000000),\n          offset: Offset(0, 1),\n          blurRadius: 2,\n        ),\n      ],\n    );\n',
  ),
  blue(
    'blue',
    'FThemeData get blueLight {\n  const colors = FColors(\n    brightness: Brightness.light,\n    barrier: Color(0x33000000),\n    background: Color(0xFFFFFFFF),\n    foreground: Color(0xFF020817),\n    primary: Color(0xFF2563EB),\n    primaryForeground: Color(0xFFF8FAFC),\n    secondary: Color(0xFFF1F5F9),\n    secondaryForeground: Color(0xFF0F172A),\n    muted: Color(0xFFF1F5F9),\n    mutedForeground: Color(0xFF64748B),\n    destructive: Color(0xFFEF4444),\n    destructiveForeground: Color(0xFFF8FAFC),\n    error: Color(0xFFEF4444),\n    errorForeground: Color(0xFFF8FAFC),\n    border: Color(0xFFE2E8F0),\n  );\n\n  final typography = _typography(colors: colors);\n  final style = _style(colors: colors, typography: typography);\n\n  return FThemeData(colors: colors, typography: typography, style: style);\n}\n\nFThemeData get blueDark {\n  const colors = FColors(\n    brightness: Brightness.dark,\n    barrier: Color(0x7A000000),\n    background: Color(0xFF020817),\n    foreground: Color(0xFFF8FAFC),\n    primary: Color(0xFF3B82F6),\n    primaryForeground: Color(0xFF0F172A),\n    secondary: Color(0xFF1E293B),\n    secondaryForeground: Color(0xFFF8FAFC),\n    muted: Color(0xFF1E293B),\n    mutedForeground: Color(0xFF94A3B8),\n    destructive: Color(0xFF7F1D1D),\n    destructiveForeground: Color(0xFFF8FAFC),\n    error: Color(0xFF7F1D1D),\n    errorForeground: Color(0xFFF8FAFC),\n    border: Color(0xFF1E293B),\n  );\n\n  final typography = _typography(colors: colors);\n  final style = _style(colors: colors, typography: typography);\n\n  return FThemeData(colors: colors, typography: typography, style: style);\n}\n\nFTypography _typography({\n  required FColors colors,\n  String defaultFontFamily = \'packages/forui/Inter\',\n}) => FTypography(\n  xs: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 12,\n    height: 1,\n  ),\n  sm: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 14,\n    height: 1.25,\n  ),\n  base: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 16,\n    height: 1.5,\n  ),\n  lg: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 18,\n    height: 1.75,\n  ),\n  xl: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 20,\n    height: 1.75,\n  ),\n  xl2: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 22,\n    height: 2,\n  ),\n  xl3: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 30,\n    height: 2.25,\n  ),\n  xl4: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 36,\n    height: 2.5,\n  ),\n  xl5: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 48,\n    height: 1,\n  ),\n  xl6: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 60,\n    height: 1,\n  ),\n  xl7: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 72,\n    height: 1,\n  ),\n  xl8: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 96,\n    height: 1,\n  ),\n);\n\nFStyle _style({required FColors colors, required FTypography typography}) =>\n    FStyle(\n      formFieldStyle: FFormFieldStyle.inherit(\n        colors: colors,\n        typography: typography,\n      ),\n      focusedOutlineStyle: FFocusedOutlineStyle(\n        color: colors.primary,\n        borderRadius: const BorderRadius.all(Radius.circular(8)),\n      ),\n      iconStyle: IconThemeData(color: colors.primary, size: 20),\n      tappableStyle: FTappableStyle(),\n      borderRadius: const FLerpBorderRadius.all(Radius.circular(8), min: 24),\n      borderWidth: 1,\n      pagePadding: const EdgeInsets.symmetric(vertical: 8, horizontal: 12),\n      shadow: const [\n        BoxShadow(\n          color: Color(0x0d000000),\n          offset: Offset(0, 1),\n          blurRadius: 2,\n        ),\n      ],\n    );\n',
  ),
  blueLight(
    'blue-light',
    'FThemeData get blueLight {\n  const colors = FColors(\n    brightness: Brightness.light,\n    barrier: Color(0x33000000),\n    background: Color(0xFFFFFFFF),\n    foreground: Color(0xFF020817),\n    primary: Color(0xFF2563EB),\n    primaryForeground: Color(0xFFF8FAFC),\n    secondary: Color(0xFFF1F5F9),\n    secondaryForeground: Color(0xFF0F172A),\n    muted: Color(0xFFF1F5F9),\n    mutedForeground: Color(0xFF64748B),\n    destructive: Color(0xFFEF4444),\n    destructiveForeground: Color(0xFFF8FAFC),\n    error: Color(0xFFEF4444),\n    errorForeground: Color(0xFFF8FAFC),\n    border: Color(0xFFE2E8F0),\n  );\n\n  final typography = _typography(colors: colors);\n  final style = _style(colors: colors, typography: typography);\n\n  return FThemeData(colors: colors, typography: typography, style: style);\n}\n\nFTypography _typography({\n  required FColors colors,\n  String defaultFontFamily = \'packages/forui/Inter\',\n}) => FTypography(\n  xs: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 12,\n    height: 1,\n  ),\n  sm: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 14,\n    height: 1.25,\n  ),\n  base: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 16,\n    height: 1.5,\n  ),\n  lg: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 18,\n    height: 1.75,\n  ),\n  xl: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 20,\n    height: 1.75,\n  ),\n  xl2: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 22,\n    height: 2,\n  ),\n  xl3: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 30,\n    height: 2.25,\n  ),\n  xl4: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 36,\n    height: 2.5,\n  ),\n  xl5: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 48,\n    height: 1,\n  ),\n  xl6: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 60,\n    height: 1,\n  ),\n  xl7: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 72,\n    height: 1,\n  ),\n  xl8: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 96,\n    height: 1,\n  ),\n);\n\nFStyle _style({required FColors colors, required FTypography typography}) =>\n    FStyle(\n      formFieldStyle: FFormFieldStyle.inherit(\n        colors: colors,\n        typography: typography,\n      ),\n      focusedOutlineStyle: FFocusedOutlineStyle(\n        color: colors.primary,\n        borderRadius: const BorderRadius.all(Radius.circular(8)),\n      ),\n      iconStyle: IconThemeData(color: colors.primary, size: 20),\n      tappableStyle: FTappableStyle(),\n      borderRadius: const FLerpBorderRadius.all(Radius.circular(8), min: 24),\n      borderWidth: 1,\n      pagePadding: const EdgeInsets.symmetric(vertical: 8, horizontal: 12),\n      shadow: const [\n        BoxShadow(\n          color: Color(0x0d000000),\n          offset: Offset(0, 1),\n          blurRadius: 2,\n        ),\n      ],\n    );\n',
  ),
  blueDark(
    'blue-dark',
    'FThemeData get blueDark {\n  const colors = FColors(\n    brightness: Brightness.dark,\n    barrier: Color(0x7A000000),\n    background: Color(0xFF020817),\n    foreground: Color(0xFFF8FAFC),\n    primary: Color(0xFF3B82F6),\n    primaryForeground: Color(0xFF0F172A),\n    secondary: Color(0xFF1E293B),\n    secondaryForeground: Color(0xFFF8FAFC),\n    muted: Color(0xFF1E293B),\n    mutedForeground: Color(0xFF94A3B8),\n    destructive: Color(0xFF7F1D1D),\n    destructiveForeground: Color(0xFFF8FAFC),\n    error: Color(0xFF7F1D1D),\n    errorForeground: Color(0xFFF8FAFC),\n    border: Color(0xFF1E293B),\n  );\n\n  final typography = _typography(colors: colors);\n  final style = _style(colors: colors, typography: typography);\n\n  return FThemeData(colors: colors, typography: typography, style: style);\n}\n\nFTypography _typography({\n  required FColors colors,\n  String defaultFontFamily = \'packages/forui/Inter\',\n}) => FTypography(\n  xs: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 12,\n    height: 1,\n  ),\n  sm: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 14,\n    height: 1.25,\n  ),\n  base: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 16,\n    height: 1.5,\n  ),\n  lg: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 18,\n    height: 1.75,\n  ),\n  xl: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 20,\n    height: 1.75,\n  ),\n  xl2: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 22,\n    height: 2,\n  ),\n  xl3: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 30,\n    height: 2.25,\n  ),\n  xl4: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 36,\n    height: 2.5,\n  ),\n  xl5: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 48,\n    height: 1,\n  ),\n  xl6: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 60,\n    height: 1,\n  ),\n  xl7: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 72,\n    height: 1,\n  ),\n  xl8: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 96,\n    height: 1,\n  ),\n);\n\nFStyle _style({required FColors colors, required FTypography typography}) =>\n    FStyle(\n      formFieldStyle: FFormFieldStyle.inherit(\n        colors: colors,\n        typography: typography,\n      ),\n      focusedOutlineStyle: FFocusedOutlineStyle(\n        color: colors.primary,\n        borderRadius: const BorderRadius.all(Radius.circular(8)),\n      ),\n      iconStyle: IconThemeData(color: colors.primary, size: 20),\n      tappableStyle: FTappableStyle(),\n      borderRadius: const FLerpBorderRadius.all(Radius.circular(8), min: 24),\n      borderWidth: 1,\n      pagePadding: const EdgeInsets.symmetric(vertical: 8, horizontal: 12),\n      shadow: const [\n        BoxShadow(\n          color: Color(0x0d000000),\n          offset: Offset(0, 1),\n          blurRadius: 2,\n        ),\n      ],\n    );\n',
  ),
  yellow(
    'yellow',
    'FThemeData get yellowLight {\n  const colors = FColors(\n    brightness: Brightness.light,\n    barrier: Color(0x33000000),\n    background: Color(0xFFFFFFFF),\n    foreground: Color(0xFF0C0A09),\n    primary: Color(0xFFFACC15),\n    primaryForeground: Color(0xFF422006),\n    secondary: Color(0xFFF5F5F4),\n    secondaryForeground: Color(0xFF1C1917),\n    muted: Color(0xFFF5F5F4),\n    mutedForeground: Color(0xFF78716C),\n    destructive: Color(0xFFEF4444),\n    destructiveForeground: Color(0xFFFAFAF9),\n    error: Color(0xFFEF4444),\n    errorForeground: Color(0xFFFAFAF9),\n    border: Color(0xFFE7E5E4),\n  );\n\n  final typography = _typography(colors: colors);\n  final style = _style(colors: colors, typography: typography);\n\n  return FThemeData(colors: colors, typography: typography, style: style);\n}\n\nFThemeData get yellowDark {\n  const colors = FColors(\n    brightness: Brightness.dark,\n    barrier: Color(0x7A000000),\n    background: Color(0xFF0C0A09),\n    foreground: Color(0xFFFAFAF9),\n    primary: Color(0xFFFACC15),\n    primaryForeground: Color(0xFF422006),\n    secondary: Color(0xFF292524),\n    secondaryForeground: Color(0xFFFAFAF9),\n    muted: Color(0xFF292524),\n    mutedForeground: Color(0xFFA8A29E),\n    destructive: Color(0xFF7F1D1D),\n    destructiveForeground: Color(0xFFFAFAF9),\n    error: Color(0xFF7F1D1D),\n    errorForeground: Color(0xFFFAFAF9),\n    border: Color(0xFF292524),\n  );\n\n  final typography = _typography(colors: colors);\n  final style = _style(colors: colors, typography: typography);\n\n  return FThemeData(colors: colors, typography: typography, style: style);\n}\n\nFTypography _typography({\n  required FColors colors,\n  String defaultFontFamily = \'packages/forui/Inter\',\n}) => FTypography(\n  xs: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 12,\n    height: 1,\n  ),\n  sm: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 14,\n    height: 1.25,\n  ),\n  base: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 16,\n    height: 1.5,\n  ),\n  lg: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 18,\n    height: 1.75,\n  ),\n  xl: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 20,\n    height: 1.75,\n  ),\n  xl2: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 22,\n    height: 2,\n  ),\n  xl3: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 30,\n    height: 2.25,\n  ),\n  xl4: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 36,\n    height: 2.5,\n  ),\n  xl5: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 48,\n    height: 1,\n  ),\n  xl6: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 60,\n    height: 1,\n  ),\n  xl7: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 72,\n    height: 1,\n  ),\n  xl8: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 96,\n    height: 1,\n  ),\n);\n\nFStyle _style({required FColors colors, required FTypography typography}) =>\n    FStyle(\n      formFieldStyle: FFormFieldStyle.inherit(\n        colors: colors,\n        typography: typography,\n      ),\n      focusedOutlineStyle: FFocusedOutlineStyle(\n        color: colors.primary,\n        borderRadius: const BorderRadius.all(Radius.circular(8)),\n      ),\n      iconStyle: IconThemeData(color: colors.primary, size: 20),\n      tappableStyle: FTappableStyle(),\n      borderRadius: const FLerpBorderRadius.all(Radius.circular(8), min: 24),\n      borderWidth: 1,\n      pagePadding: const EdgeInsets.symmetric(vertical: 8, horizontal: 12),\n      shadow: const [\n        BoxShadow(\n          color: Color(0x0d000000),\n          offset: Offset(0, 1),\n          blurRadius: 2,\n        ),\n      ],\n    );\n',
  ),
  yellowLight(
    'yellow-light',
    'FThemeData get yellowLight {\n  const colors = FColors(\n    brightness: Brightness.light,\n    barrier: Color(0x33000000),\n    background: Color(0xFFFFFFFF),\n    foreground: Color(0xFF0C0A09),\n    primary: Color(0xFFFACC15),\n    primaryForeground: Color(0xFF422006),\n    secondary: Color(0xFFF5F5F4),\n    secondaryForeground: Color(0xFF1C1917),\n    muted: Color(0xFFF5F5F4),\n    mutedForeground: Color(0xFF78716C),\n    destructive: Color(0xFFEF4444),\n    destructiveForeground: Color(0xFFFAFAF9),\n    error: Color(0xFFEF4444),\n    errorForeground: Color(0xFFFAFAF9),\n    border: Color(0xFFE7E5E4),\n  );\n\n  final typography = _typography(colors: colors);\n  final style = _style(colors: colors, typography: typography);\n\n  return FThemeData(colors: colors, typography: typography, style: style);\n}\n\nFTypography _typography({\n  required FColors colors,\n  String defaultFontFamily = \'packages/forui/Inter\',\n}) => FTypography(\n  xs: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 12,\n    height: 1,\n  ),\n  sm: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 14,\n    height: 1.25,\n  ),\n  base: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 16,\n    height: 1.5,\n  ),\n  lg: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 18,\n    height: 1.75,\n  ),\n  xl: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 20,\n    height: 1.75,\n  ),\n  xl2: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 22,\n    height: 2,\n  ),\n  xl3: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 30,\n    height: 2.25,\n  ),\n  xl4: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 36,\n    height: 2.5,\n  ),\n  xl5: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 48,\n    height: 1,\n  ),\n  xl6: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 60,\n    height: 1,\n  ),\n  xl7: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 72,\n    height: 1,\n  ),\n  xl8: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 96,\n    height: 1,\n  ),\n);\n\nFStyle _style({required FColors colors, required FTypography typography}) =>\n    FStyle(\n      formFieldStyle: FFormFieldStyle.inherit(\n        colors: colors,\n        typography: typography,\n      ),\n      focusedOutlineStyle: FFocusedOutlineStyle(\n        color: colors.primary,\n        borderRadius: const BorderRadius.all(Radius.circular(8)),\n      ),\n      iconStyle: IconThemeData(color: colors.primary, size: 20),\n      tappableStyle: FTappableStyle(),\n      borderRadius: const FLerpBorderRadius.all(Radius.circular(8), min: 24),\n      borderWidth: 1,\n      pagePadding: const EdgeInsets.symmetric(vertical: 8, horizontal: 12),\n      shadow: const [\n        BoxShadow(\n          color: Color(0x0d000000),\n          offset: Offset(0, 1),\n          blurRadius: 2,\n        ),\n      ],\n    );\n',
  ),
  yellowDark(
    'yellow-dark',
    'FThemeData get yellowDark {\n  const colors = FColors(\n    brightness: Brightness.dark,\n    barrier: Color(0x7A000000),\n    background: Color(0xFF0C0A09),\n    foreground: Color(0xFFFAFAF9),\n    primary: Color(0xFFFACC15),\n    primaryForeground: Color(0xFF422006),\n    secondary: Color(0xFF292524),\n    secondaryForeground: Color(0xFFFAFAF9),\n    muted: Color(0xFF292524),\n    mutedForeground: Color(0xFFA8A29E),\n    destructive: Color(0xFF7F1D1D),\n    destructiveForeground: Color(0xFFFAFAF9),\n    error: Color(0xFF7F1D1D),\n    errorForeground: Color(0xFFFAFAF9),\n    border: Color(0xFF292524),\n  );\n\n  final typography = _typography(colors: colors);\n  final style = _style(colors: colors, typography: typography);\n\n  return FThemeData(colors: colors, typography: typography, style: style);\n}\n\nFTypography _typography({\n  required FColors colors,\n  String defaultFontFamily = \'packages/forui/Inter\',\n}) => FTypography(\n  xs: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 12,\n    height: 1,\n  ),\n  sm: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 14,\n    height: 1.25,\n  ),\n  base: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 16,\n    height: 1.5,\n  ),\n  lg: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 18,\n    height: 1.75,\n  ),\n  xl: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 20,\n    height: 1.75,\n  ),\n  xl2: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 22,\n    height: 2,\n  ),\n  xl3: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 30,\n    height: 2.25,\n  ),\n  xl4: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 36,\n    height: 2.5,\n  ),\n  xl5: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 48,\n    height: 1,\n  ),\n  xl6: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 60,\n    height: 1,\n  ),\n  xl7: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 72,\n    height: 1,\n  ),\n  xl8: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 96,\n    height: 1,\n  ),\n);\n\nFStyle _style({required FColors colors, required FTypography typography}) =>\n    FStyle(\n      formFieldStyle: FFormFieldStyle.inherit(\n        colors: colors,\n        typography: typography,\n      ),\n      focusedOutlineStyle: FFocusedOutlineStyle(\n        color: colors.primary,\n        borderRadius: const BorderRadius.all(Radius.circular(8)),\n      ),\n      iconStyle: IconThemeData(color: colors.primary, size: 20),\n      tappableStyle: FTappableStyle(),\n      borderRadius: const FLerpBorderRadius.all(Radius.circular(8), min: 24),\n      borderWidth: 1,\n      pagePadding: const EdgeInsets.symmetric(vertical: 8, horizontal: 12),\n      shadow: const [\n        BoxShadow(\n          color: Color(0x0d000000),\n          offset: Offset(0, 1),\n          blurRadius: 2,\n        ),\n      ],\n    );\n',
  ),
  violet(
    'violet',
    'FThemeData get violetLight {\n  const colors = FColors(\n    brightness: Brightness.light,\n    barrier: Color(0x33000000),\n    background: Color(0xFFFFFFFF),\n    foreground: Color(0xFF030712),\n    primary: Color(0xFF7C3AED),\n    primaryForeground: Color(0xFFF9FAFB),\n    secondary: Color(0xFFF3F4F6),\n    secondaryForeground: Color(0xFF111827),\n    muted: Color(0xFFF3F4F6),\n    mutedForeground: Color(0xFF6B7280),\n    destructive: Color(0xFFEF4444),\n    destructiveForeground: Color(0xFFF9FAFB),\n    error: Color(0xFFEF4444),\n    errorForeground: Color(0xFFF9FAFB),\n    border: Color(0xFFE5E7EB),\n  );\n\n  final typography = _typography(colors: colors);\n  final style = _style(colors: colors, typography: typography);\n\n  return FThemeData(colors: colors, typography: typography, style: style);\n}\n\nFThemeData get violetDark {\n  const colors = FColors(\n    brightness: Brightness.dark,\n    barrier: Color(0x7A000000),\n    background: Color(0xFF030712),\n    foreground: Color(0xFFF9FAFB),\n    primary: Color(0xFF6D28D9),\n    primaryForeground: Color(0xFFF9FAFB),\n    secondary: Color(0xFF1F2937),\n    secondaryForeground: Color(0xFFF9FAFB),\n    muted: Color(0xFF1F2937),\n    mutedForeground: Color(0xFF9CA3AF),\n    destructive: Color(0xFF7F1D1D),\n    destructiveForeground: Color(0xFFF9FAFB),\n    error: Color(0xFF7F1D1D),\n    errorForeground: Color(0xFFF9FAFB),\n    border: Color(0xFF1F2937),\n  );\n\n  final typography = _typography(colors: colors);\n  final style = _style(colors: colors, typography: typography);\n\n  return FThemeData(colors: colors, typography: typography, style: style);\n}\n\nFTypography _typography({\n  required FColors colors,\n  String defaultFontFamily = \'packages/forui/Inter\',\n}) => FTypography(\n  xs: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 12,\n    height: 1,\n  ),\n  sm: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 14,\n    height: 1.25,\n  ),\n  base: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 16,\n    height: 1.5,\n  ),\n  lg: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 18,\n    height: 1.75,\n  ),\n  xl: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 20,\n    height: 1.75,\n  ),\n  xl2: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 22,\n    height: 2,\n  ),\n  xl3: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 30,\n    height: 2.25,\n  ),\n  xl4: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 36,\n    height: 2.5,\n  ),\n  xl5: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 48,\n    height: 1,\n  ),\n  xl6: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 60,\n    height: 1,\n  ),\n  xl7: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 72,\n    height: 1,\n  ),\n  xl8: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 96,\n    height: 1,\n  ),\n);\n\nFStyle _style({required FColors colors, required FTypography typography}) =>\n    FStyle(\n      formFieldStyle: FFormFieldStyle.inherit(\n        colors: colors,\n        typography: typography,\n      ),\n      focusedOutlineStyle: FFocusedOutlineStyle(\n        color: colors.primary,\n        borderRadius: const BorderRadius.all(Radius.circular(8)),\n      ),\n      iconStyle: IconThemeData(color: colors.primary, size: 20),\n      tappableStyle: FTappableStyle(),\n      borderRadius: const FLerpBorderRadius.all(Radius.circular(8), min: 24),\n      borderWidth: 1,\n      pagePadding: const EdgeInsets.symmetric(vertical: 8, horizontal: 12),\n      shadow: const [\n        BoxShadow(\n          color: Color(0x0d000000),\n          offset: Offset(0, 1),\n          blurRadius: 2,\n        ),\n      ],\n    );\n',
  ),
  violetLight(
    'violet-light',
    'FThemeData get violetLight {\n  const colors = FColors(\n    brightness: Brightness.light,\n    barrier: Color(0x33000000),\n    background: Color(0xFFFFFFFF),\n    foreground: Color(0xFF030712),\n    primary: Color(0xFF7C3AED),\n    primaryForeground: Color(0xFFF9FAFB),\n    secondary: Color(0xFFF3F4F6),\n    secondaryForeground: Color(0xFF111827),\n    muted: Color(0xFFF3F4F6),\n    mutedForeground: Color(0xFF6B7280),\n    destructive: Color(0xFFEF4444),\n    destructiveForeground: Color(0xFFF9FAFB),\n    error: Color(0xFFEF4444),\n    errorForeground: Color(0xFFF9FAFB),\n    border: Color(0xFFE5E7EB),\n  );\n\n  final typography = _typography(colors: colors);\n  final style = _style(colors: colors, typography: typography);\n\n  return FThemeData(colors: colors, typography: typography, style: style);\n}\n\nFTypography _typography({\n  required FColors colors,\n  String defaultFontFamily = \'packages/forui/Inter\',\n}) => FTypography(\n  xs: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 12,\n    height: 1,\n  ),\n  sm: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 14,\n    height: 1.25,\n  ),\n  base: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 16,\n    height: 1.5,\n  ),\n  lg: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 18,\n    height: 1.75,\n  ),\n  xl: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 20,\n    height: 1.75,\n  ),\n  xl2: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 22,\n    height: 2,\n  ),\n  xl3: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 30,\n    height: 2.25,\n  ),\n  xl4: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 36,\n    height: 2.5,\n  ),\n  xl5: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 48,\n    height: 1,\n  ),\n  xl6: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 60,\n    height: 1,\n  ),\n  xl7: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 72,\n    height: 1,\n  ),\n  xl8: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 96,\n    height: 1,\n  ),\n);\n\nFStyle _style({required FColors colors, required FTypography typography}) =>\n    FStyle(\n      formFieldStyle: FFormFieldStyle.inherit(\n        colors: colors,\n        typography: typography,\n      ),\n      focusedOutlineStyle: FFocusedOutlineStyle(\n        color: colors.primary,\n        borderRadius: const BorderRadius.all(Radius.circular(8)),\n      ),\n      iconStyle: IconThemeData(color: colors.primary, size: 20),\n      tappableStyle: FTappableStyle(),\n      borderRadius: const FLerpBorderRadius.all(Radius.circular(8), min: 24),\n      borderWidth: 1,\n      pagePadding: const EdgeInsets.symmetric(vertical: 8, horizontal: 12),\n      shadow: const [\n        BoxShadow(\n          color: Color(0x0d000000),\n          offset: Offset(0, 1),\n          blurRadius: 2,\n        ),\n      ],\n    );\n',
  ),
  violetDark(
    'violet-dark',
    'FThemeData get violetDark {\n  const colors = FColors(\n    brightness: Brightness.dark,\n    barrier: Color(0x7A000000),\n    background: Color(0xFF030712),\n    foreground: Color(0xFFF9FAFB),\n    primary: Color(0xFF6D28D9),\n    primaryForeground: Color(0xFFF9FAFB),\n    secondary: Color(0xFF1F2937),\n    secondaryForeground: Color(0xFFF9FAFB),\n    muted: Color(0xFF1F2937),\n    mutedForeground: Color(0xFF9CA3AF),\n    destructive: Color(0xFF7F1D1D),\n    destructiveForeground: Color(0xFFF9FAFB),\n    error: Color(0xFF7F1D1D),\n    errorForeground: Color(0xFFF9FAFB),\n    border: Color(0xFF1F2937),\n  );\n\n  final typography = _typography(colors: colors);\n  final style = _style(colors: colors, typography: typography);\n\n  return FThemeData(colors: colors, typography: typography, style: style);\n}\n\nFTypography _typography({\n  required FColors colors,\n  String defaultFontFamily = \'packages/forui/Inter\',\n}) => FTypography(\n  xs: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 12,\n    height: 1,\n  ),\n  sm: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 14,\n    height: 1.25,\n  ),\n  base: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 16,\n    height: 1.5,\n  ),\n  lg: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 18,\n    height: 1.75,\n  ),\n  xl: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 20,\n    height: 1.75,\n  ),\n  xl2: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 22,\n    height: 2,\n  ),\n  xl3: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 30,\n    height: 2.25,\n  ),\n  xl4: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 36,\n    height: 2.5,\n  ),\n  xl5: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 48,\n    height: 1,\n  ),\n  xl6: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 60,\n    height: 1,\n  ),\n  xl7: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 72,\n    height: 1,\n  ),\n  xl8: TextStyle(\n    color: colors.foreground,\n    fontFamily: defaultFontFamily,\n    fontSize: 96,\n    height: 1,\n  ),\n);\n\nFStyle _style({required FColors colors, required FTypography typography}) =>\n    FStyle(\n      formFieldStyle: FFormFieldStyle.inherit(\n        colors: colors,\n        typography: typography,\n      ),\n      focusedOutlineStyle: FFocusedOutlineStyle(\n        color: colors.primary,\n        borderRadius: const BorderRadius.all(Radius.circular(8)),\n      ),\n      iconStyle: IconThemeData(color: colors.primary, size: 20),\n      tappableStyle: FTappableStyle(),\n      borderRadius: const FLerpBorderRadius.all(Radius.circular(8), min: 24),\n      borderWidth: 1,\n      pagePadding: const EdgeInsets.symmetric(vertical: 8, horizontal: 12),\n      shadow: const [\n        BoxShadow(\n          color: Color(0x0d000000),\n          offset: Offset(0, 1),\n          blurRadius: 2,\n        ),\n      ],\n    );\n',
  );

  const Theme(this.name, this.source);

  /// The name.
  final String name;

  /// The code to generate.
  final String source;
}
