name: Docs Preview Deploy
on:
  workflow_run:
    workflows: ["Docs Preview Build"]
    types: [completed]

jobs:
  deploy:
    name: Deploy Docs & Samples
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    environment: docs-development
    steps:
      # Extract PR metadata
      - uses: actions/download-artifact@v5
        with:
          name: pr-metadata
          path: ./pr-metadata
          github-token: ${{ secrets.GITHUB_TOKEN }}
          run-id: ${{ github.event.workflow_run.id }}
      - id: pr-metadata
        run: |
          echo "pr_number=$(cat ./pr-metadata/pr-number.txt)" >> $GITHUB_OUTPUT
          echo "pr_head_ref=$(cat ./pr-metadata/pr-head-ref.txt)" >> $GITHUB_OUTPUT
          echo "pr_head_sha=$(cat ./pr-metadata/pr-head-sha.txt)" >> $GITHUB_OUTPUT

      # Deploy samples
      - uses: actions/download-artifact@v5
        with:
          name: samples-build
          path: ./samples-build
          github-token: ${{ secrets.GITHUB_TOKEN }}
          run-id: ${{ github.event.workflow_run.id }}
      - uses: cloudflare/wrangler-action@v3
        id: publish-samples
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ vars.CLOUDFLARE_ACCOUNT_ID }}
          command: pages deploy ./samples-build --project-name=${{ vars.CLOUDFLARE_DEMO_PROJECT_NAME }} --branch=main

      # Deploy docs
      - uses: actions/download-artifact@v5
        with:
          name: docs-build
          path: ./docs-build
          github-token: ${{ secrets.GITHUB_TOKEN }}
          run-id: ${{ github.event.workflow_run.id }}
      - run: |
          echo '{"demoUrl": "${{ steps.publish-samples.outputs.deployment-url }}"}' > ./docs-build/config.json
      - uses: cloudflare/wrangler-action@v3
        id: publish-docs
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ vars.CLOUDFLARE_ACCOUNT_ID }}
          command: pages deploy ./docs-build --project-name=${{ vars.CLOUDFLARE_DOCS_PROJECT_NAME }} --branch=${{ steps.pr-metadata.outputs.pr_head_ref }}

      # Create/update comment with link to preview
      - name: Generate GitHub App token
        uses: actions/create-github-app-token@v2
        id: generate-token
        with:
          app-id: ${{ secrets.AUTO_MAID_APP_ID }}
          private-key: ${{ secrets.AUTO_MAID_PRIVATE_KEY }}
      - uses: actions/checkout@v5
        with:
          token: ${{ steps.generate-token.outputs.token }}
          ref: main
          sparse-checkout: |
            .github/deployment_preview_template.md
          sparse-checkout-cone-mode: false
      - uses: peter-evans/find-comment@v4
        id: find-comment
        with:
          issue-number: ${{ steps.pr-metadata.outputs.pr_number }}
          comment-author: 'auto-maid[bot]'
      - uses: chuhlomin/render-template@v1.10
        id: render-markdown
        with:
          template: .github/deployment_preview_template.md
          vars: |
            sha: ${{ steps.pr-metadata.outputs.pr_head_sha }}
            url: ${{ steps.publish-docs.outputs.deployment-url }}
      - uses: peter-evans/create-or-update-comment@v5
        with:
          token: ${{ steps.generate-token.outputs.token }}
          comment-id: ${{ steps.find-comment.outputs.comment-id }}
          issue-number: ${{ steps.pr-metadata.outputs.pr_number }}
          body: ${{ steps.render-markdown.outputs.result }}
          edit-mode: replace

      # Check that all relative URLs are working
      - uses: actions/setup-go@v6
      - run: go install github.com/raviqqe/muffet/v2@latest
      - run: muffet ${{ steps.publish-docs.outputs.deployment-url }} --buffer-size=32768 --exclude="(\/cdn-cgi\/)|(github.com)|(pub.dev)|(shadcn.com)"
